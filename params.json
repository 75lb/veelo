{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Optimise your video library using Handbrake","body":"[![Build Status](https://travis-ci.org/75lb/handbraker.png)](https://travis-ci.org/75lb/handbraker)\r\n\r\nHandbraker\r\n==========\r\nConsolidate your video library from a mixture of formats to a single, modern format which works everywhere ([H.264/MPEG-4 AVC](http://en.wikipedia.org/wiki/H.264/MPEG-4_AVC)). With a single command.\r\n\r\nHandbraker, a scripting layer for the excellent [Handbrake](http://handbrake.fr), is built for this task. \r\n\r\nWorks on __Windows__, __Linux__ and __Mac OSX__.\r\n\r\nSynopsis\r\n========\r\n<pre><code>$ handbraker --recurse Boxing --exclude Tyson\r\n[18:34:43] queue length: 158\r\n[18:34:43] file types: .m4v(16) .avi(91) .wmv(2) .mp4(7) .mpg(23) .mkv(18) .m2ts(1)\r\n[18:34:43] processing: <strong>Boxing/Eubank/Chris Eubank vs Nigel Benn.avi</strong>\r\nEncoding: 0.71 % (70.07 fps, avg 78.30 fps, ETA 00h22m37s)</code></pre>\r\n\r\nWhat is Handbrake? \r\n------------------\r\nIn their words: \r\n\r\n> HandBrake is an open-source, GPL-licensed, multiplatform, multithreaded video transcoder, available for MacOS X, Linux and Windows. It converts video from nearly any format to a handful of modern ones.\r\n\r\nInstall\r\n=======\r\nOn all platforms, first ensure [node.js](http://nodejs.org) is installed. Visit [their download page](http://nodejs.org/download/) to find the correct installer for your system.\r\n\r\nThen, at the command line enter: \r\n\r\nWindows & Mac OS X\r\n------------------\r\n\t$ npm -g install handbraker\r\n\r\nUbuntu Linux\r\n------------\r\n\t$ sudo npm -g install handbraker\r\n\t$ sudo npm -g run-script handbraker ubuntu-setup\r\n\r\n(the second step above installs the [official Ubuntu Handbrake package](https://launchpad.net/~stebbins/+archive/handbrake-releases)).\r\n\r\nOther Platforms\r\n---------------\r\nOther platform users must manually ensure `HandbrakeCLI` is installed on their PATH. Check the [official website](http://handbrake.fr/downloads2.php) to see if a release is available for your system. \r\n\r\nUpdate\r\n------\r\nIf you already have handbraker installed, double-check you have the latest version: \r\n\r\n\t$ sudo npm update -g handbraker\r\n\r\nUsage\r\n=====\r\nA quick summary of the options can be displayed with the `--help` option:\r\n\r\n\t$ handbraker --help\r\n\t\r\n\tUsage: handbraker [options] [HandbrakeCLI options] [files]\r\n\r\n\t### Handbraker Options-------------------------------------------------------\r\n\t        --ext                  Output file extension. Choose 'mp4', 'm4v' or 'mkv' (default: m4v)\r\n\t        --archive              Archive the original file in a 'handbraker-originals' directory\r\n\t        --output-dir           Outputs to the specified directory\r\n\t        --preserve-dates       Preserve input's 'modified' and 'accessed' times on the output file\r\n\t        --recurse              Traverse into directories\r\n\t        --include              Regex include filter, for use with --recurse\r\n\t        --exclude              Regex exclude filter, for use with --recurse\r\n\t        --dry-run              Describe the outcome without performing the actual work\r\n\t        --embed-srt            If a matching .srt file exists, embed subtitles into the output video\r\n\t    -v, --verbose              Show detailed output\r\n\t    -h, --help                 Show this help\r\n\t        --hbhelp               Show this help plus all HandbrakeCLI options\r\n\r\nHandbrake Options\r\n-----------------\r\nAll non handbraker-specific options (those listed by `handbraker --help`) are passed directly to Handbrake. To view the [full range of Handbrake options](https://trac.handbrake.fr/wiki/CLIGuide), use:\r\n\r\n\t$ handbraker --hbhelp\r\n\r\nPresets\r\n-------\r\nHandbrake comes with a collection of [built-in presets](https://trac.handbrake.fr/wiki/BuiltInPresets), optimised for common scenarios and specific devices. View the list using: \r\n\r\n\t$ handbraker --preset-list\r\n\t\r\nTo encode video optimised for iPod, you might use: \r\n\r\n\t$ handbraker --preset iPod video1.mov video2.mov\r\n\r\nOutput Extension\r\n----------------\t\r\nBy default, handbraker will output media in a MP4 container using the \".m4v\" file extension (plays well with all media players, particularly iTunes). If you prefer to output the MKV container format, use `--ext mkv`.\r\n\r\nArchive your originals\r\n----------------------\r\nHandbraker does not delete or modify your original files, it leaves them where they are. If you would like to move your original files into a directory (convenient for archiving or discarding) set the `--archive` flag:\r\n\r\n<pre><code>$ tree\r\n.\r\n├── rain.mov\r\n└── video.mov\t\r\n\t\r\n$ handbraker --archive *.mov\r\n[18:44:01] queue length: 2\r\n[18:44:01] file types: .mov(2)\r\n[18:44:01] processing <strong>rain.m4v</strong>\r\n[18:44:39] processing <strong>video.m4v</strong>\r\n[18:45:22] all encodes complete.\r\n\t\r\n$ tree\r\n.\r\n├── handbraker-originals\r\n│   ├── rain.mov\r\n│   └── video.mov\r\n├── rain.m4v\r\n└── video.m4v</code></pre>\r\n\r\nOutput Directory\r\n----------------\r\nBy default, handbraker outputs in the same directory as the input file. You can output to a sub-directory of each input file by passing `--output-dir <directory>`. For example,\r\n\r\n<pre><code>$ tree\r\n.\r\n├── Jan\r\n│   └── Manchester.mov\r\n└── Feb\r\n    └── Liverpool.mov\r\n\t\r\n$ handbraker */*.mov --output-dir optimised\r\n[18:44:01] queue length: 2\r\n[18:44:01] file types: .mov(2)\r\n[18:44:01] processing <strong>Jan/Manchester.mov</strong>\r\n[18:44:39] processing <strong>Feb/Liverpool.mov</strong>\r\n[18:45:22] all encodes complete.\r\n\t\r\n$ tree\r\n.\r\n├── Jan\r\n│   ├── Manchester.mov\r\n│   └── optimised\r\n│       └── Manchester.m4v\r\n└── Feb\r\n    ├── Liverpool.mov\r\n    └── optimised\r\n        └── Liverpool.m4v</code></pre>\r\n\r\nIf you specify an absolute `--output-dir` path, or a path beginning with `.` or `..`, output will be directed to a single, specific directory: \r\n\r\n<pre><code>$ tree\r\n.\r\n├── Jan\r\n│   └── Manchester.mov\r\n└── Feb\r\n    └── Liverpool.mov\r\n\t\r\n$ handbraker */*.mov --output-dir ./optimised\r\n[18:44:01] queue length: 2\r\n[18:44:01] file types: .mov(2)\r\n[18:44:01] processing <strong>Jan/Manchester.mov</strong>\r\n[18:44:39] processing <strong>Feb/Liverpool.mov</strong>\r\n[18:45:22] all encodes complete.\r\n\r\n$ tree\r\n.\r\n├── Jan\r\n│   └── Manchester.mov\r\n├── Feb\r\n│   └── Liverpool.mov\r\n└── optimised\r\n    ├── Jan\r\n    │   └── Manchester.m4v\r\n    └── Feb\r\n        └── Liverpool.m4v</code></pre>\r\n\r\nRecurse\r\n-------\r\nBy default, Handbraker ignore directories. If you wish to traverse into directories, processing the entire tree, use `--recurse`. \r\n\r\nWith large directory trees, control which files are processed using `--include` and `--exclude` filters. Both these options accept Regular Expressions. For example, to only process `wmv` and `avi` files:\r\n\r\n\t$ handbraker --recurse Sport --include \"\\.wmv|\\.avi\"\r\n\r\nDry Run\r\n-------\r\nTo see a report of what will or will not be processed, _without_ performing any work, pass `--dry-run`. This is a useful verification step before processing a large batch.\r\n\r\nEmbedding Subtitles\r\n-------------------\r\nIf videos in your batch have external SRT subtitle files, you can embed them automatically by passing `--embed-srt`.\r\n\r\n\t$ handbraker Film/World/* --embed-srt\r\n\r\n*Known Issue*: Handbrake does not accept SRT filenames containing a comma (the comma is a reserved delimiter character for the `--srt-file` option). \r\n\r\nConfiguration\r\n=============\r\nThe Handbraker configuration file is stored at `~/.handbraker` on Mac and Linux, `%USERPROFILE%\\Application Data` on Windows XP and `%USERPROFILE%\\AppData\\Roaming` on Windows Vista and later. It must remain [valid JSON](http://jsonlint.com). \r\n\r\nThe initial config file looks like this: \r\n\r\n\t{\r\n\t\t\"ignoreList\": [\".DS_Store\"],\r\n\t\t\"archiveDirectory\": \"handbraker-originals\",\r\n\t\t\"defaults\": {\r\n\t\t\t\"ext\": \"m4v\",\r\n\t\t\t\"preset\": \"Normal\",\r\n\t\t\t\"optimize\": true,\r\n\t\t\t\"preserve-dates\": true,\r\n\t\t\t\"srt-codeset\": \"UTF-8\", \r\n\t\t\t\"srt-lang\": \"eng\"\r\n\t\t}\r\n\t}\r\n\r\nDefaults\r\n--------\r\nHandbraker ships with the \"Normal\" Handbrake preset set as default. This preset maintains the quality, dimensions and frame rate of the original. You can personalise your defaults in the config file. Options passed on the command line override their corresponding defaults.\r\n\r\nIgnore List\r\n-----------\r\nManage the list of files Handbraker should ignore, e.g. \"Thumbs.db\", \".DS_Store\" etc.\r\n\r\nMore Examples\r\n=============\r\nTo test the water, you want to encode a small sample of each video in the \"Comedy\" directory. Use the Handbrake options `--start-at` and `--stop-at`. For example, create samples beginning at the 60th second lasting for 120 seconds, outputing each into a `samples` sub-directory:\r\n\r\n\t$ handbraker Comedy/* --start-at duration:60 --stop-at duration:120 --output-dir samples\r\n\t\r\nIf sound quality is important, encode with a higher audio bitrate (e.g. 256kb/s):\r\n\r\n\t$ handbraker Concert.wmv --ab 256\r\n\t\r\nSay your source media contains audio and subtitle tracks in several languages. You are interested in keeping just the Japanese audio and English subtitles. First scan the source media to find the ID numbers of the audio/subtitle tracks you wish to keep:\r\n\r\n\t$ handbraker -t 0 TokyoStory.mkv\r\n\t\r\nIn the output you'll see something like this: \r\n\r\n\t+ audio tracks:\r\n\t  + 1, Russian (AC3) (2.0 ch) (iso639-2: rus), 48000Hz, 192000bps\r\n\t  + 2, Russian (AC3) (2.0 ch) (iso639-2: rus), 48000Hz, 192000bps\r\n\t  + 3, Japanese (AC3) (2.0 ch) (iso639-2: jpn), 48000Hz, 192000bps\r\n\t+ subtitle tracks:\r\n\t  + 1, Russian (iso639-2: rus) (Text)(UTF-8)\r\n\t  + 2, English (iso639-2: eng) (Text)(UTF-8)\r\n\r\nSo, we'll transcode taking audio track 3 and subtitle track 2:\r\n\r\n\t$ handbraker TokyoStory.mkv --audio 3 --subtitle 2\r\n\t\r\nUse `--quality` to adjust the compression quality of the output. 20 is the optimum value, between 35 and 40 will give a conveniently small output file whilst remaining watchable - useful for email attachment:\r\n\r\n\t$ handbraker campaign.mov --quality 35\r\n\r\nContributing\r\n============\r\nPatches welcome. There are a few features that would be nice to have, if you fancy implementing them: \r\n\r\n* a web frontend\r\n* live queue management\r\n* user-defined presets \r\n\r\nPlease file bugs or feature requests on the [Issue List](https://github.com/75lb/handbraker/issues?state=open).\r\n\r\nDeveloper install\r\n-----------------\r\n\t$ git clone https://github.com/75lb/handbraker.git\r\n\t$ cd handbraker\r\n\t$ npm install\r\n\t$ npm link\r\n\t\r\nFrom there, the `handbraker` command will point to your checkout. If you make some changes, check everything still works by running the test suite: \r\n\r\n\t$ npm test\r\n\r\nDVD Copy Protection\r\n===================\r\nYou can use handbraker to rip DVDs but it *does not crack DVD copy protection*. Use a specialised DVD ripper for this. \r\n\r\nLicense\r\n=======\r\nCopyright (C) 2012 Lloyd Brookes <75pound@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"","name":"Handbraker"}